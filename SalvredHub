local GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name

local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/AdenoxScripterm/Orion-Library-Edited/main/Orion%20Edited"))()
local Window = OrionLib:MakeWindow({Name = "SalvredHub | " .. identifyexecutor() .. " | " .. GameName, HidePremium = false, SaveConfig = true, ConfigFolder = "SalvredHubCode"})

OrionLib:MakeNotification({
	Name = "21/08/2024",
	Content = "Added the name of your executor to the Hub name",
	Image = "rbxassetid://4483345998",
	Time = 5
})

-- Función para verificar y notificar sobre la presencia de objetos en CoreGui
local function checkAndNotify()
    local CoreGui = game:GetService("CoreGui")
    local found = false
    local names = {}
    local notificationImageId = "17366458568"  -- ID predeterminado para la notificación
    
    -- Variantes de nombres a detectar y sus IDs de notificación
    local ids = {
        ["Codex"] = "11558559086",
        ["Arceus"] = "18951446226",
        ["Arceus X"] = "18951446226",
        ["Arceus x"] = "18951446226",
        ["arceus x"] = "18951446226",
        ["Arceus X Neo"] = "18951446226",
        ["Arceus X NEO"] = "18951446226",
        ["ArceusXNeo"] = "18951446226",
        ["VegaXAndroidUI"] = "18953320590",
        ["Delta"] = "12730597972",
        ["DeltaGui"] = "12730597972",
        ["G2L"] = "12730597972",
        ["AppleWare iOS"] = "18954192704",
        ["Cubix"] = "18135302048",
        ["Fluxus"] = "17366458568",
        ["FluxusAndroid"] = "17366458568",
        ["fluxusandroid"] = "17366458568"
    }
    
    -- Verificar objetos
    for name, id in pairs(ids) do
        local obj = CoreGui:FindFirstChild(name)
        if obj then
            table.insert(names, name == "VegaXAndroidUI" and "Vega X" or
                                (name == "G2L" or name == "DeltaGui" and "Delta X" or
                                (name == "AppleWare iOS" and "AppleWare" or
                                (name == "Cubix" and "Cubix" or name))))
            notificationImageId = id
            found = true
        end
    end

    -- Notificar si se encontró algún objeto
    if found then
        OrionLib:MakeNotification({
            Name = "Your Executor",
            Content = "Executor: " .. table.concat(names, ", "),
            Image = "rbxassetid://" .. notificationImageId,
            Time = 5
        })
    end
end

-- Llamar a la función para verificar y notificar al iniciar el script
checkAndNotify()

-- El resto del código sigue igual
-- Agrega aquí el resto de tu script...

local PlayerTab = Window:MakeTab({
 Name = "HolaGadi",
 Icon = "rbxassetid://12730597972",
 PremiumOnly = false
})

local Section = PlayerTab:AddSection({
 Name = "You"
})

PlayerTab:AddSlider({
 Name = "Walkspeed",
 Min = 16,
 Max = 3500,
 Default = 16,
 Color = Color3.fromRGB(255,255,255),
 Increment = 1,
 ValueName = "WalkSpeed",
 Callback = function(WS)
  game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = WS
 end    
})

PlayerTab:AddSlider({
 Name = "JumpPower",
 Min = 50,
 Max = 5000,
 Default = 50,
 Color = Color3.fromRGB(255,0,0),
 Increment = 1,
 ValueName = "JumpPower",
 Callback = function(JP)
  game.Players.LocalPlayer.Character.Humanoid.JumpPower = JP
 end    
})

PlayerTab:AddSlider({
    Name = "Gravity",
    Min = 1,
    Max = 500,
    Default = 196,  -- La gravedad predeterminada de Roblox es 196.2
    Color = Color3.fromRGB(255,0,0),
    Increment = 1,
    ValueName = "Gravity",
    Callback = function(Gravity)
        game.Workspace.Gravity = Gravity
    end    
})

PlayerTab:AddSlider({
    Name = "Camera Fov",
    Min = 70,
    Max = 150,
    Default = 70,  -- Valor predeterminado del FOV
    Increment = 1,
    ValueName = "Fov",
    Callback = function(Fov)
        workspace.CurrentCamera.FieldOfView = Fov
    end    
})

local selectedPlayer
local cameraToggle = false
local playerDropdown

-- Función para actualizar la lista de jugadores
local function updatePlayerList()
    local playerNames = {}
    for _, player in pairs(game.Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    playerDropdown:Refresh(playerNames, true)  -- Refrescar las opciones del dropdown
end

-- Función para actualizar la cámara
local function updateCamera()
    if cameraToggle and selectedPlayer and selectedPlayer.Character then
        local humanoid = selectedPlayer.Character:FindFirstChild("Humanoid")
        if humanoid then
            workspace.CurrentCamera.CameraSubject = humanoid
        end
    else
        workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    end
end

-- Función para manejar el cambio de cámara cuando el personaje seleccionado muere
local function onCharacterAdded(character)
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.Died:Connect(function()
        if selectedPlayer == game.Players.LocalPlayer then
            updateCamera()
        end
    end)
    updateCamera()  -- Actualizar la cámara cuando el personaje se añade
end

-- Dropdown para seleccionar el jugador
playerDropdown = PlayerTab:AddDropdown({
    Name = "Select Player To View",
    Default = "",
    Options = {},
    Callback = function(Value)
        selectedPlayer = game.Players:FindFirstChild(Value)
        if selectedPlayer then
            selectedPlayer.CharacterAdded:Connect(onCharacterAdded)  -- Conectar el evento CharacterAdded
            if selectedPlayer.Character then
                onCharacterAdded(selectedPlayer.Character)
            end
        end
        updateCamera()  -- Actualizar la cámara al cambiar de jugador
    end    
})

-- Toggle para activar/desactivar el seguimiento de la cámara
PlayerTab:AddToggle({
    Name = "View Selected Player",
    Default = false,
    Callback = function(Value)
        cameraToggle = Value
        updateCamera()  -- Actualizar la cámara según el estado del toggle
    end    
})

-- Actualizar la lista de jugadores al entrar o salir un jugador
game.Players.PlayerAdded:Connect(updatePlayerList)
game.Players.PlayerRemoving:Connect(updatePlayerList)

-- Manejar la aparición del personaje del jugador local
game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("Humanoid")  -- Esperar a que aparezca el Humanoid
    updateCamera()  -- Asegurar que la cámara siga al jugador seleccionado al reaparecer
end)

-- Inicializar la lista de jugadores cuando se carga el script
updatePlayerList()

local Universal = Window:MakeTab({
	Name = "Universal",
	Icon = "rbxassetid://11558559086",
	PremiumOnly = false
})



Universal:AddButton({
	Name = "FlyMobileV1",
	Callback = function()loadstring(game:HttpGet("https://pastebin.com/raw/XEhjj81x"))()
      		print("SexoKat")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


Universal:AddButton({
	Name = "TpPlayers",
	Callback = function()loadstring(game:HttpGet("https://pastebin.com/raw/JCWAp19A", true))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]



Universal:AddButton({
	Name = "IY",
	Callback = function()loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
      		print("Soon...")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


Universal:AddButton({
	Name = "CarFly",
	Callback = function()loadstring(game:HttpGet("https://pastebin.com/raw/xRr0MSDy"))()
      		print("sex")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


Universal:AddButton({
	Name = "SystemSalvred(Anims)",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/AdenoxScripterm/SystemSalvred/main/SalvredBrokenor"))()
      		print("sex")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


Universal:AddButton({
	Name = "NamelessAdmin!Fixed",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/Source"))();
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]



Universal:AddButton({
	Name = "Rochips Panel",
	Callback = function()if "Rochips Loader" then
	local Rochips_panel,v,u,i=loadstring,"/snippets","gwwv","/raw/main.lua" ;
	Rochips_panel(game:HttpGet("https://glot.io"..v.."/" ..u.."877ga3"..i))();
	return "it will load in around 3 - 131 seconds"
end
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


local Brookhaven = Window:MakeTab({
	Name = "Brookhaven",
	Icon = "rbxassetid://17366458568",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]


Brookhaven:AddButton({
	Name = "R4D",
	Callback = function()loadstring(game:HttpGet('https://raw.githubusercontent.com/M1ZZ001/BrookhavenR4D/main/Brookhaven%20R4D%20Script'))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


Brookhaven:AddButton({
	Name = "IceHub(Discontinued)",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/IceMael7/NewIceHub/main/Brookhaven"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


Brookhaven:AddButton({
	Name = "REDzHub",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/REDzHUB/REDzHUB/main/REDzHUB"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


Brookhaven:AddButton({
	Name = "JulHub(Discontinued/Deleted)",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/JulHubz/JulHub/main/JulHub"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

-- Crear sección para los controles de música
Brookhaven:AddSection({
    Name = "Music Id"
})

-- Variable para almacenar el ID de música del carro
local CarMusicID = ""

-- Añadir un TextBox para el ID de la música del carro
local CarTextBox = Brookhaven:AddTextbox({
    Name = "Car Music ID",
    Default = "",
    TextDisappear = false,
    Callback = function(Text)
        CarMusicID = Text
    end
})

-- Añadir un botón de Play para la música del carro
Brookhaven:AddButton({
    Name = "Play Car Music",
    Callback = function()
        -- Verificar que el jugador esté sentado en un vehículo
        local character = Player.Character or Player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChild("Humanoid")
        local seat = humanoid and humanoid.SeatPart

        if seat and seat:IsA("VehicleSeat") then
            local musicId = CarMusicID
            if tonumber(musicId) then
                -- Debug: Imprimir el ID de música del carro para confirmar
                print("Playing car music with ID: " .. musicId)
                
                -- Reproducir la música del carro
                local musicArgs = {
                    [1] = "PickingCarMusicText",
                    [2] = musicId
                }
                
                local remote = game:GetService("ReplicatedStorage"):FindFirstChild("RE") and game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sCa1r")
                if remote then
                    remote:FireServer(unpack(musicArgs))
                else
                    warn("Remote not found or not correctly named.")
                end
            else
                warn("Please enter a valid Car Music ID")
            end
        else
            warn("You must be sitting in a vehicle to play car music")
        end
    end
})

-- Variable para almacenar el ID de música de la casa
local HouseMusicID = ""

-- Añadir un TextBox para el ID de la música de la casa
local HouseTextBox = Brookhaven:AddTextbox({
    Name = "House Music ID",
    Default = "",
    TextDisappear = false,
    Callback = function(Text)
        HouseMusicID = Text
    end
})

-- Añadir un botón de Play para la música de la casa
Brookhaven:AddButton({
    Name = "Play House Music",
    Callback = function()
        -- Reproducir la música de la casa
        local musicId = HouseMusicID
        if tonumber(musicId) then
            -- Debug: Imprimir el ID de música de la casa para confirmar
            print("Playing house music with ID: " .. musicId)
            
            -- Reproducir la música de la casa
            local musicArgs = {
                [1] = "PickHouseMusicText",
                [2] = musicId
            }
            
            local remote = game:GetService("ReplicatedStorage"):FindFirstChild("RE") and game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e")
            if remote then
                remote:FireServer(unpack(musicArgs))
            else
                warn("Remote not found or not correctly named.")
            end
        else
            warn("Please enter a valid House Music ID")
        end
    end
})

local BloxFruit = Window:MakeTab({
	Name = "BloxFruit",
	Icon = "rbxassetid://18951446226",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]


BloxFruit:AddButton({
	Name = "FTS X Hub",
	Callback = function()loadstring(game:HttpGet(('https://raw.githubusercontent.com/Tulam2000/FTS-HUB/main/FTS%20x%20Hub')))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


BloxFruit:AddButton({
	Name = "AnnieHub",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/Anniecuti/Free-Scr/main/Annie-Hub.lua"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


local Section = BloxFruit:AddSection({
	Name = "Best"
})

--[[
Name = <string> - The name of the section.
]]


BloxFruit:AddButton({
	Name = "BlackHub/BlckHub",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/1f0yt/community/main/BLCK"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


BloxFruit:AddButton({
	Name = "W Azure",
	Callback = function()loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/3b2169cf53bc6104dabe8e19562e5cc2.lua"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


BloxFruit:AddButton({
	Name = "REDzHub",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/REDzHUB/BloxFruits/main/redz9999"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


local BladeBall = Window:MakeTab({
	Name = "BladeBall",
	Icon = "rbxassetid://18952522884",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]


BladeBall:AddButton({
	Name = "MyScriptV1",
	Callback = function()loadstring(game:HttpGet("https://pastebin.com/raw/0vvStZGN"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


BladeBall:AddButton({
	Name = "REDzHub",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/REDzHUB/BladeBall/main/redz9999"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]



BladeBall:AddButton({
	Name = "MyScriptV2",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/AdenoxScripterm/BladeBallV1/main/BladeBallV1NM"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


local DoomSpire = Window:MakeTab({
	Name = "DoomSpire",
	Icon = "rbxassetid://18135302048",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]


DoomSpire:AddButton({
	Name = "TpIslands",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/AdenoxScripterm/Doomspire/main/DoomspireTeleport"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


local PrisonLife = Window:MakeTab({
	Name = "PrisonLife",
	Icon = "rbxassetid://18953320590",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]


PrisonLife:AddButton({
	Name = "PrisonWare",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/Denverrz/scripts/master/PRISONWARE_v1.3.txt"))();
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


PrisonLife:AddButton({
	Name = "TigerAdmin",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/AdenoxScripterm/TigerEdited/main/Tiger%20Admin"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


local LegendsOfSpeed = Window:MakeTab({
	Name = "LegendsOfSpeed",
	Icon = "rbxassetid://18979034603",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]


LegendsOfSpeed:AddButton({
	Name = "MyScript",
	Callback = function()loadstring(game:HttpGet("https://pastebin.com/raw/K6dXZxtG"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


local Evade = Window:MakeTab({
	Name = "Evade",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]


Evade:AddButton({
	Name = "PepesHub",
	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/PepesGH1/stuff/main/evadeloader.lua"))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


local Mm2 = Window:MakeTab({
	Name = "Mm2",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]


Mm2:AddButton({
	Name = "Vynixus",
	Callback = function()loadstring(game:getobjects("rbxassetid://4001118261")[1].source)()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


Mm2:AddButton({
	Name = "SkiHub",
	Callback = function()loadstring(game:HttpGet(("https://pastebin.com/raw/mT10xnt7"), true))() 
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]


local Section = Mm2:AddSection({
	Name = "HubsForGame"
})

--[[
Name = <string> - The name of the section.
]]


Mm2:AddButton({
	Name = "UnFairHub",
	Callback = function()loadstring(game:HttpGet(('https://raw.githubusercontent.com/rblxscriptsnet/unfair/main/rblxhub.lua'),true))()
      		print("button pressed")
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]

--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
-- new stuff
_G.CodexUiCustomSettings = {
			CodexSpooferImage = 18965493710,
			CodexSpooferText = "SalvredHub",
			CodexSpooferPoweredBy = "Heyy Bro",
			FloatingIconColor=Color3.fromRGB(0, 0, 0),
			MainUiBackground = Color3.fromRGB(0, 0, 0),
			Icons=Color3.fromRGB(255, 255, 255),
			IconsOff = Color3.fromRGB(255, 255, 255),
			Fade = false
		}

_G.CodexSpooferImage  = nil -- Old Build DO NOT TOUCH UNLESS YOU WANT THE OLD VER
_G.CodexSpooferText = nil
_G.CodexSpooferPoweredBy = nil 
loadstring(game:HttpGet("https://github.com/MuhXd/Roblox-mobile-script/blob/main/Codex/Synapse%20X%20Real%20Not%20Clickbait.lua?raw=true" ))();

local DaIconPositionX = ScreenCenterX - DaIconSize.X.Offset / 2
local DaIconPositionY = ScreenCenterY - DaIconSize.Y.Offset / 2
DELTA["DaIcon"].Position = UDim2.new(0, DaIconPositionX, 0, DaIconPositionY/20)
DELTA["DaIcon"].Draggable = true
DELTA["DaIcon"].Image = "rbxassetid://18965493710"
DELTA["DaIcon"].BackgroundColor3 = Color3.fromRGB(255, 0, 0)

DELTA["das"] = Instance.new("UICorner", DELTA["DaIcon"]);

local iconsize = readfile("iconshape")
if iconsize == "Squircle" then
    DELTA["das"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);
elseif iconsize == "Circle" then
    DELTA["das"]["CornerRadius"] = UDim.new(0.50000000298023224, 0);
elseif iconsize == "Square" then
    DELTA["das"]["CornerRadius"] = UDim.new(0, 0);
else
    DELTA["das"]["CornerRadius"] = UDim.new(0.20000000298023224, 0);
end
